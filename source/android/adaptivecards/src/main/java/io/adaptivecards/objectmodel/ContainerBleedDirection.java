/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.adaptivecards.objectmodel;

public enum ContainerBleedDirection {
  BleedRestricted(0x0000),
  BleedLeft(0x0001),
  BleedRight(0x0010),
  BleedLeftRight(0x0011),
  BleedUp(0x0100),
  BleedLeftUp(0x0101),
  BleedRightUp(0x0110),
  BleedLeftRightUp(0x0111),
  BleedDown(0x1000),
  BleedLeftDown(0x1001),
  BleedRightDown(0x1010),
  BleedLeftRightDown(0x1011),
  BleedUpDown(0x1100),
  BleedLeftUpDown(0x1101),
  BleedRightUpDown(0x1110),
  BleedAll(0x1111);

  public final int swigValue() {
    return swigValue;
  }

  public static ContainerBleedDirection swigToEnum(int swigValue) {
    ContainerBleedDirection[] swigValues = ContainerBleedDirection.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (ContainerBleedDirection swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + ContainerBleedDirection.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private ContainerBleedDirection() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private ContainerBleedDirection(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private ContainerBleedDirection(ContainerBleedDirection swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

